# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the ODPi Egeria project.
name: "Run CTS"
on:
  # Only manually for now
  workflow_dispatch:

jobs:
  kind:
    strategy:
      matrix:
        connector: ['org.odpi.openmetadata.adapters.repositoryservices.inmemory.repositoryconnector.InMemoryOMRSRepositoryConnectorProvider','org.odpi.openmetadata.adapters.repositoryservices.        graphrepository.repositoryconnector.GraphOMRSRepositoryConnectorProvider']
    runs-on: ubuntu-latest
    steps:
      - name: setup Helm
        uses: azure/setup-helm@v3
      - uses: actions/checkout@v3
        name: checkout code
      - uses: helm/kind-action@v1
        name: setup kind
        with:
          cluster_name: cts
          wait: 120s
      - name: Check k8s cluster
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
      - name: Setup Egeria Repo & install CTS chart
        run: |
          helm repo add egeria https://odpi.github.io/egeria-charts
          helm install cts egeria/egeria-cts --set-string tut.connectorProvider=${{ matrix.connector }} --set-string imageDefaults.tag="3.14" --set-string resources.requests.memory=3Gi --set-string resources.limits.memory=5Gi --set records="1"
      - name: Check Chart installed & running
        run: |
          helm list
          kubectl get pods
      - name: Wait for CTS platform to be ready
        run: |
          kubectl wait pods --selector=app.kubernetes.io/component=platform --for condition=Ready          
      - name: Wait for CTS results to be available
        # This waits for the report pod to go ready - this means results are ready
        run: |
          kubectl wait pods --selector=app.kubernetes.io/component=report --for condition=Ready
      - name: Gather CTS report
        run: |
          kubectl exec $(kubectl get pod -l app.kubernetes.io/component=report) -- sh -c 'cat /export/pipe' | tar -xvf -
      - name: Upload CTS report
        uses: actions/upload-artifact@v3
        with:
          name: CTS report ${{ matrix.connector }}
          path: export/cts.tar.gz
